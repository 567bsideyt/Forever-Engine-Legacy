// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_gameFolder_gameObjects_userInterface_ClassHUD
#include <gameFolder/gameObjects/userInterface/ClassHUD.h>
#endif
#ifndef INCLUDED_gameFolder_meta_MusicBeatState
#include <gameFolder/meta/MusicBeatState.h>
#endif
#ifndef INCLUDED_gameFolder_meta_state_PlayState
#include <gameFolder/meta/state/PlayState.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_db5d794f296afe99_21_new,"gameFolder.gameObjects.userInterface.ClassHUD","new",0xd0adb2cb,"gameFolder.gameObjects.userInterface.ClassHUD.new","gameFolder/gameObjects/userInterface/ClassHUD.hx",21,0x20d0fae2)
HX_LOCAL_STACK_FRAME(_hx_pos_db5d794f296afe99_49_hudUpdate,"gameFolder.gameObjects.userInterface.ClassHUD","hudUpdate",0x3d8532cb,"gameFolder.gameObjects.userInterface.ClassHUD.hudUpdate","gameFolder/gameObjects/userInterface/ClassHUD.hx",49,0x20d0fae2)
namespace gameFolder{
namespace gameObjects{
namespace userInterface{

void ClassHUD_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_db5d794f296afe99_21_new)
HXLINE(  22)		super::__construct(null());
HXLINE(  24)		int dif = ::gameFolder::meta::state::PlayState_obj::storyDifficulty;
HXLINE(  25)		::String difficultyString;
HXLINE(  26)		switch((int)(dif)){
            			case (int)0: {
HXLINE(  29)				difficultyString = HX_("Easy",22,b8,e5,2d);
            			}
            			break;
            			case (int)1: {
HXLINE(  31)				difficultyString = HX_("Normal",47,e6,fd,64);
            			}
            			break;
            			case (int)2: {
HXLINE(  33)				difficultyString = HX_("Hard",0b,5b,e1,2f);
            			}
            			break;
            			default:{
HXLINE(  35)				difficultyString = HX_("null",87,9e,0e,49);
            			}
            		}
HXLINE(  40)		::String infoDisplay = ( (::String)((((::gameFolder::meta::state::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic) + HX_(" - ",73,6f,18,00)) + difficultyString) + HX_(" - Forever Engine",0e,df,0f,52))) );
HXLINE(  42)		this->infoBar =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,5,(::flixel::FlxG_obj::height - 30),0,infoDisplay,20,null());
HXLINE(  43)		this->infoBar->setFormat((HX_("assets/fonts/",37,ff,a5,9c) + HX_("vcr.ttf",9d,d2,a7,82)),16,-1,HX_("right",dc,0b,64,e9),::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn(),-16777216,null());
HXLINE(  44)		this->infoBar->scrollFactor->set(null(),null());
HXLINE(  45)		this->add(this->infoBar);
            	}

Dynamic ClassHUD_obj::__CreateEmpty() { return new ClassHUD_obj; }

void *ClassHUD_obj::_hx_vtable = 0;

Dynamic ClassHUD_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ClassHUD_obj > _hx_result = new ClassHUD_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ClassHUD_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x4a18f16b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x4a18f16b;
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		return inClassId==(int)0x7ccf8994;
	}
}

void ClassHUD_obj::hudUpdate(){
            	HX_STACKFRAME(&_hx_pos_db5d794f296afe99_49_hudUpdate)
            	}


HX_DEFINE_DYNAMIC_FUNC0(ClassHUD_obj,hudUpdate,(void))


::hx::ObjectPtr< ClassHUD_obj > ClassHUD_obj::__new() {
	::hx::ObjectPtr< ClassHUD_obj > __this = new ClassHUD_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ClassHUD_obj > ClassHUD_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ClassHUD_obj *__this = (ClassHUD_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ClassHUD_obj), true, "gameFolder.gameObjects.userInterface.ClassHUD"));
	*(void **)__this = ClassHUD_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ClassHUD_obj::ClassHUD_obj()
{
}

void ClassHUD_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ClassHUD);
	HX_MARK_MEMBER_NAME(infoBar,"infoBar");
	 ::flixel::group::FlxTypedGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ClassHUD_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(infoBar,"infoBar");
	 ::flixel::group::FlxTypedGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ClassHUD_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"infoBar") ) { return ::hx::Val( infoBar ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hudUpdate") ) { return ::hx::Val( hudUpdate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ClassHUD_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"infoBar") ) { infoBar=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ClassHUD_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("infoBar",05,aa,ff,0d));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ClassHUD_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(ClassHUD_obj,infoBar),HX_("infoBar",05,aa,ff,0d)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ClassHUD_obj_sStaticStorageInfo = 0;
#endif

static ::String ClassHUD_obj_sMemberFields[] = {
	HX_("infoBar",05,aa,ff,0d),
	HX_("hudUpdate",20,2e,1d,d0),
	::String(null()) };

::hx::Class ClassHUD_obj::__mClass;

void ClassHUD_obj::__register()
{
	ClassHUD_obj _hx_dummy;
	ClassHUD_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("gameFolder.gameObjects.userInterface.ClassHUD",59,f1,fb,c7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ClassHUD_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ClassHUD_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ClassHUD_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ClassHUD_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gameFolder
} // end namespace gameObjects
} // end namespace userInterface
