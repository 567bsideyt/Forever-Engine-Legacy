// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_gameFolder_gameObjects_Character
#include <gameFolder/gameObjects/Character.h>
#endif
#ifndef INCLUDED_gameFolder_gameObjects_Stage
#include <gameFolder/gameObjects/Stage.h>
#endif
#ifndef INCLUDED_gameFolder_gameObjects_background_BackgroundDancer
#include <gameFolder/gameObjects/background/BackgroundDancer.h>
#endif
#ifndef INCLUDED_gameFolder_gameObjects_background_BackgroundGirls
#include <gameFolder/gameObjects/background/BackgroundGirls.h>
#endif
#ifndef INCLUDED_gameFolder_meta_MusicBeatState
#include <gameFolder/meta/MusicBeatState.h>
#endif
#ifndef INCLUDED_gameFolder_meta_state_PlayState
#include <gameFolder/meta/state/PlayState.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fd8e2044f3578622_28_new,"gameFolder.gameObjects.Stage","new",0x621c0f76,"gameFolder.gameObjects.Stage.new","gameFolder/gameObjects/Stage.hx",28,0x76b3e03c)
static const int _hx_array_data_285ddc84_2[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,(int)15,(int)16,(int)17,(int)18,
};
HX_LOCAL_STACK_FRAME(_hx_pos_fd8e2044f3578622_289_returnGFtype,"gameFolder.gameObjects.Stage","returnGFtype",0xfd4ca333,"gameFolder.gameObjects.Stage.returnGFtype","gameFolder/gameObjects/Stage.hx",289,0x76b3e03c)
HX_LOCAL_STACK_FRAME(_hx_pos_fd8e2044f3578622_311_dadPosition,"gameFolder.gameObjects.Stage","dadPosition",0x3170f726,"gameFolder.gameObjects.Stage.dadPosition","gameFolder/gameObjects/Stage.hx",311,0x76b3e03c)
HX_LOCAL_STACK_FRAME(_hx_pos_fd8e2044f3578622_360_repositionPlayers,"gameFolder.gameObjects.Stage","repositionPlayers",0x1998df8c,"gameFolder.gameObjects.Stage.repositionPlayers","gameFolder/gameObjects/Stage.hx",360,0x76b3e03c)
HX_LOCAL_STACK_FRAME(_hx_pos_fd8e2044f3578622_398_stageUpdate,"gameFolder.gameObjects.Stage","stageUpdate",0x0d5d4c7d,"gameFolder.gameObjects.Stage.stageUpdate","gameFolder/gameObjects/Stage.hx",398,0x76b3e03c)
HX_LOCAL_STACK_FRAME(_hx_pos_fd8e2044f3578622_403_stageUpdate,"gameFolder.gameObjects.Stage","stageUpdate",0x0d5d4c7d,"gameFolder.gameObjects.Stage.stageUpdate","gameFolder/gameObjects/Stage.hx",403,0x76b3e03c)
namespace gameFolder{
namespace gameObjects{

void Stage_obj::__construct(::String curStage){
            	HX_GC_STACKFRAME(&_hx_pos_fd8e2044f3578622_28_new)
HXLINE(  50)		this->daPixelZoom = ::gameFolder::meta::state::PlayState_obj::daPixelZoom;
HXLINE(  46)		this->defaultCamZoom = ((Float)1.05);
HXLINE(  54)		super::__construct(null());
HXLINE(  56)		this->curStage = curStage;
HXLINE(  58)		::String _hx_switch_0 = curStage;
            		if (  (_hx_switch_0==HX_("highway",0d,b3,8f,73)) ){
HXLINE( 116)			curStage = HX_("highway",0d,b3,8f,73);
HXLINE( 117)			this->defaultCamZoom = ((Float)0.90);
HXLINE( 119)			 ::flixel::FlxSprite skyBG =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,-50,null());
HXDLIN( 119)			::String library = null();
HXDLIN( 119)			 ::flixel::FlxSprite skyBG1 = skyBG->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/limoSunset",04,4f,1b,86))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE( 120)			skyBG1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 121)			this->add(skyBG1);
HXLINE( 123)			 ::flixel::FlxSprite bgLimo =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,480,null());
HXLINE( 124)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/bgLimo",f3,2c,3c,52));
HXDLIN( 124)			::String library1 = null();
HXDLIN( 124)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1);
HXDLIN( 124)			bgLimo->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library1)));
HXLINE( 125)			bgLimo->animation->addByPrefix(HX_("drive",0a,69,bc,df),HX_("background limo pink",65,40,fe,9c),24,null(),null(),null());
HXLINE( 126)			bgLimo->animation->play(HX_("drive",0a,69,bc,df),null(),null(),null());
HXLINE( 127)			bgLimo->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 128)			this->add(bgLimo);
HXLINE( 130)			this->grpLimoDancers =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE( 131)			this->add(this->grpLimoDancers);
HXLINE( 133)			{
HXLINE( 134)				{
HXLINE( 135)					 ::gameFolder::gameObjects::background::BackgroundDancer dancer =  ::gameFolder::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(130) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 136)					dancer->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 137)					this->grpLimoDancers->add(dancer).StaticCast<  ::gameFolder::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 134)				{
HXLINE( 135)					 ::gameFolder::gameObjects::background::BackgroundDancer dancer1 =  ::gameFolder::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(500) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 136)					dancer1->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 137)					this->grpLimoDancers->add(dancer1).StaticCast<  ::gameFolder::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 134)				{
HXLINE( 135)					 ::gameFolder::gameObjects::background::BackgroundDancer dancer2 =  ::gameFolder::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(870) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 136)					dancer2->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 137)					this->grpLimoDancers->add(dancer2).StaticCast<  ::gameFolder::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 134)				{
HXLINE( 135)					 ::gameFolder::gameObjects::background::BackgroundDancer dancer3 =  ::gameFolder::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(1240) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 136)					dancer3->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 137)					this->grpLimoDancers->add(dancer3).StaticCast<  ::gameFolder::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 134)				{
HXLINE( 135)					 ::gameFolder::gameObjects::background::BackgroundDancer dancer4 =  ::gameFolder::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(1610) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 136)					dancer4->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 137)					this->grpLimoDancers->add(dancer4).StaticCast<  ::gameFolder::gameObjects::background::BackgroundDancer >();
            				}
            			}
HXLINE( 140)			 ::flixel::FlxSprite overlayShit =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-500,-600,null());
HXDLIN( 140)			::String library2 = null();
HXDLIN( 140)			 ::flixel::FlxSprite overlayShit1 = overlayShit->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/limoOverlay",62,26,90,62))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE( 141)			overlayShit1->set_alpha(((Float)0.5));
HXLINE( 150)			::String key1 = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/limoDrive",5c,93,5f,4a));
HXDLIN( 150)			::String library3 = null();
HXDLIN( 150)			::String limoTex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3);
HXDLIN( 150)			 ::flixel::graphics::frames::FlxAtlasFrames limoTex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(limoTex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library3));
HXLINE( 152)			this->limo =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,550,null());
HXLINE( 153)			this->limo->set_frames(limoTex1);
HXLINE( 154)			this->limo->animation->addByPrefix(HX_("drive",0a,69,bc,df),HX_("Limo stage",1d,b3,df,4c),24,null(),null(),null());
HXLINE( 155)			this->limo->animation->play(HX_("drive",0a,69,bc,df),null(),null(),null());
HXLINE( 156)			this->limo->set_antialiasing(true);
HXLINE( 158)			 ::flixel::FlxSprite _hx_tmp1 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-300,160,null());
HXDLIN( 158)			::String library4 = null();
HXDLIN( 158)			this->fastCar = _hx_tmp1->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/fastCarLol",80,21,b9,ac))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4),null(),null(),null(),null(),null());
HXLINE( 115)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("military",cd,eb,5c,59)) ){
HXLINE( 226)			curStage = HX_("military",cd,eb,5c,59);
HXLINE( 227)			 ::flixel::FlxSprite skyBG =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,20,null());
HXDLIN( 227)			::String library = null();
HXDLIN( 227)			 ::flixel::FlxSprite skyBG1 = skyBG->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/tankSky",c8,bf,a7,bd))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE( 228)			skyBG1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 229)			this->add(skyBG1);
HXLINE( 231)			 ::flixel::FlxSprite skyClouds =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,-50,null());
HXDLIN( 231)			::String library1 = null();
HXDLIN( 231)			 ::flixel::FlxSprite skyClouds1 = skyClouds->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/tankClouds",d7,18,1a,f0))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null());
HXLINE( 232)			skyClouds1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 233)			this->add(skyClouds1);
HXLINE( 235)			 ::flixel::FlxSprite tankMountains =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,-50,null());
HXDLIN( 235)			::String library2 = null();
HXDLIN( 235)			 ::flixel::FlxSprite tankMountains1 = tankMountains->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/tankMountains",ad,f7,3b,48))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE( 236)			tankMountains1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 237)			this->add(tankMountains1);
HXLINE( 239)			 ::flixel::FlxSprite tankRuins =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,-50,null());
HXDLIN( 239)			::String library3 = null();
HXDLIN( 239)			 ::flixel::FlxSprite tankRuins1 = tankRuins->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/tankRuins",b2,0b,17,ba))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null());
HXLINE( 240)			tankRuins1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 241)			this->add(tankRuins1);
HXLINE( 243)			 ::flixel::FlxSprite tankBuildings =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,-50,null());
HXDLIN( 243)			::String library4 = null();
HXDLIN( 243)			 ::flixel::FlxSprite tankBuildings1 = tankBuildings->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/tankBuildings",a6,09,37,9e))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4),null(),null(),null(),null(),null());
HXLINE( 244)			tankBuildings1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 245)			this->add(tankBuildings1);
HXLINE( 247)			 ::flixel::FlxSprite tankGround =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,40,null());
HXDLIN( 247)			::String library5 = null();
HXDLIN( 247)			 ::flixel::FlxSprite tankGround1 = tankGround->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/tankGround",00,0e,ef,fd))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5),null(),null(),null(),null(),null());
HXLINE( 249)			tankGround1->set_antialiasing(true);
HXLINE( 250)			this->add(tankGround1);
HXLINE( 251)			tankGround1->setGraphicSize(::Std_obj::_hx_int((tankGround1->get_width() * ((Float)1.3))),null());
HXLINE( 225)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("philly",28,77,5e,ef)) ){
HXLINE(  76)			curStage = HX_("philly",28,77,5e,ef);
HXLINE(  78)			 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-100,null(),null());
HXDLIN(  78)			::String library = null();
HXDLIN(  78)			 ::flixel::FlxSprite bg1 = bg->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/sky",12,a8,68,1f))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE(  79)			bg1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE(  80)			this->add(bg1);
HXLINE(  82)			 ::flixel::FlxSprite city =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-10,null(),null());
HXDLIN(  82)			::String library1 = null();
HXDLIN(  82)			 ::flixel::FlxSprite city1 = city->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/city",5a,75,95,51))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null());
HXLINE(  83)			city1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  84)			city1->setGraphicSize(::Std_obj::_hx_int((city1->get_width() * ((Float)0.85))),null());
HXLINE(  85)			city1->updateHitbox();
HXLINE(  86)			this->add(city1);
HXLINE(  88)			this->phillyCityLights =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  89)			this->add(this->phillyCityLights);
HXLINE(  91)			{
HXLINE(  92)				{
HXLINE(  93)					 ::flixel::FlxSprite light =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  93)					::String library2 = null();
HXDLIN(  93)					 ::flixel::FlxSprite light1 = light->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 0)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE(  94)					light1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  95)					light1->set_visible(false);
HXLINE(  96)					light1->setGraphicSize(::Std_obj::_hx_int((light1->get_width() * ((Float)0.85))),null());
HXLINE(  97)					light1->updateHitbox();
HXLINE(  98)					light1->set_antialiasing(true);
HXLINE(  99)					this->phillyCityLights->add(light1).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  92)				{
HXLINE(  93)					 ::flixel::FlxSprite light2 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  93)					::String library3 = null();
HXDLIN(  93)					 ::flixel::FlxSprite light3 = light2->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 1)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null());
HXLINE(  94)					light3->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  95)					light3->set_visible(false);
HXLINE(  96)					light3->setGraphicSize(::Std_obj::_hx_int((light3->get_width() * ((Float)0.85))),null());
HXLINE(  97)					light3->updateHitbox();
HXLINE(  98)					light3->set_antialiasing(true);
HXLINE(  99)					this->phillyCityLights->add(light3).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  92)				{
HXLINE(  93)					 ::flixel::FlxSprite light4 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  93)					::String library4 = null();
HXDLIN(  93)					 ::flixel::FlxSprite light5 = light4->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 2)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4),null(),null(),null(),null(),null());
HXLINE(  94)					light5->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  95)					light5->set_visible(false);
HXLINE(  96)					light5->setGraphicSize(::Std_obj::_hx_int((light5->get_width() * ((Float)0.85))),null());
HXLINE(  97)					light5->updateHitbox();
HXLINE(  98)					light5->set_antialiasing(true);
HXLINE(  99)					this->phillyCityLights->add(light5).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  92)				{
HXLINE(  93)					 ::flixel::FlxSprite light6 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  93)					::String library5 = null();
HXDLIN(  93)					 ::flixel::FlxSprite light7 = light6->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 3)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5),null(),null(),null(),null(),null());
HXLINE(  94)					light7->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  95)					light7->set_visible(false);
HXLINE(  96)					light7->setGraphicSize(::Std_obj::_hx_int((light7->get_width() * ((Float)0.85))),null());
HXLINE(  97)					light7->updateHitbox();
HXLINE(  98)					light7->set_antialiasing(true);
HXLINE(  99)					this->phillyCityLights->add(light7).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  92)				{
HXLINE(  93)					 ::flixel::FlxSprite light8 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  93)					::String library6 = null();
HXDLIN(  93)					 ::flixel::FlxSprite light9 = light8->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 4)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library6),null(),null(),null(),null(),null());
HXLINE(  94)					light9->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  95)					light9->set_visible(false);
HXLINE(  96)					light9->setGraphicSize(::Std_obj::_hx_int((light9->get_width() * ((Float)0.85))),null());
HXLINE(  97)					light9->updateHitbox();
HXLINE(  98)					light9->set_antialiasing(true);
HXLINE(  99)					this->phillyCityLights->add(light9).StaticCast<  ::flixel::FlxSprite >();
            				}
            			}
HXLINE( 102)			 ::flixel::FlxSprite streetBehind =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-40,50,null());
HXDLIN( 102)			::String library7 = null();
HXDLIN( 102)			 ::flixel::FlxSprite streetBehind1 = streetBehind->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/behindTrain",df,10,a5,ef))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library7),null(),null(),null(),null(),null());
HXLINE( 103)			this->add(streetBehind1);
HXLINE( 105)			 ::flixel::FlxSprite _hx_tmp =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,2000,360,null());
HXDLIN( 105)			::String library8 = null();
HXDLIN( 105)			this->phillyTrain = _hx_tmp->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/train",39,89,e5,e0))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library8),null(),null(),null(),null(),null());
HXLINE( 106)			this->add(this->phillyTrain);
HXLINE( 108)			 ::flixel::_hx_system::FlxSound _hx_tmp1 =  ::flixel::_hx_system::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 108)			this->trainSound = _hx_tmp1->loadEmbedded(::Paths_obj::sound(HX_("train_passes",56,da,5a,7f),null()),null(),null(),null());
HXLINE( 109)			::flixel::FlxG_obj::sound->list->add(this->trainSound).StaticCast<  ::flixel::_hx_system::FlxSound >();
HXLINE( 113)			 ::flixel::FlxSprite street =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-40,streetBehind1->y,null());
HXDLIN( 113)			::String library9 = null();
HXDLIN( 113)			 ::flixel::FlxSprite street1 = street->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/street",72,e5,9d,b3))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library9),null(),null(),null(),null(),null());
HXLINE( 114)			this->add(street1);
HXLINE(  75)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 161)			curStage = HX_("school",74,b8,c8,40);
HXLINE( 165)			 ::flixel::FlxSprite bgSky =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null());
HXDLIN( 165)			::String library = null();
HXDLIN( 165)			 ::flixel::FlxSprite bgSky1 = bgSky->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebSky",67,71,47,9f))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE( 166)			bgSky1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 167)			this->add(bgSky1);
HXLINE( 169)			int repositionShit = -200;
HXLINE( 171)			 ::flixel::FlxSprite bgSchool =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,repositionShit,0,null());
HXDLIN( 171)			::String library1 = null();
HXDLIN( 171)			 ::flixel::FlxSprite bgSchool1 = bgSchool->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebSchool",ae,7f,2d,36))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null());
HXLINE( 172)			bgSchool1->scrollFactor->set(((Float)0.6),((Float)0.90));
HXLINE( 173)			this->add(bgSchool1);
HXLINE( 175)			 ::flixel::FlxSprite bgStreet =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,repositionShit,null(),null());
HXDLIN( 175)			::String library2 = null();
HXDLIN( 175)			 ::flixel::FlxSprite bgStreet1 = bgStreet->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebStreet",3d,df,91,06))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE( 176)			bgStreet1->scrollFactor->set(((Float)0.95),((Float)0.95));
HXLINE( 177)			this->add(bgStreet1);
HXLINE( 179)			 ::flixel::FlxSprite fgTrees =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(repositionShit + 170),130,null());
HXDLIN( 179)			::String library3 = null();
HXDLIN( 179)			 ::flixel::FlxSprite fgTrees1 = fgTrees->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebTreesBack",22,67,c4,6b))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null());
HXLINE( 180)			fgTrees1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 181)			this->add(fgTrees1);
HXLINE( 183)			 ::flixel::FlxSprite bgTrees =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(repositionShit - 380),-800,null());
HXLINE( 184)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebTrees",5b,17,0c,2d));
HXDLIN( 184)			::String library4 = null();
HXDLIN( 184)			::String treetex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4);
HXDLIN( 184)			 ::flixel::graphics::frames::FlxAtlasFrames treetex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSpriteSheetPacker(treetex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library4));
HXLINE( 185)			bgTrees->set_frames(treetex1);
HXLINE( 186)			bgTrees->animation->add(HX_("treeLoop",e2,72,7f,2b),::Array_obj< int >::fromData( _hx_array_data_285ddc84_2,19),12,null(),null(),null());
HXLINE( 187)			bgTrees->animation->play(HX_("treeLoop",e2,72,7f,2b),null(),null(),null());
HXLINE( 188)			bgTrees->scrollFactor->set(((Float)0.85),((Float)0.85));
HXLINE( 189)			this->add(bgTrees);
HXLINE( 191)			 ::flixel::FlxSprite treeLeaves =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,repositionShit,-40,null());
HXLINE( 192)			::String key1 = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/petals",18,87,d8,de));
HXDLIN( 192)			::String library5 = null();
HXDLIN( 192)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5);
HXDLIN( 192)			treeLeaves->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library5)));
HXLINE( 193)			treeLeaves->animation->addByPrefix(HX_("leaves",9c,23,7b,96),HX_("PETALS ALL",0a,57,91,88),24,true,null(),null());
HXLINE( 194)			treeLeaves->animation->play(HX_("leaves",9c,23,7b,96),null(),null(),null());
HXLINE( 195)			treeLeaves->scrollFactor->set(((Float)0.85),((Float)0.85));
HXLINE( 196)			this->add(treeLeaves);
HXLINE( 198)			int widShit = ::Std_obj::_hx_int((bgSky1->get_width() * ( (Float)(6) )));
HXLINE( 200)			bgSky1->setGraphicSize(widShit,null());
HXLINE( 201)			bgSchool1->setGraphicSize(widShit,null());
HXLINE( 202)			bgStreet1->setGraphicSize(widShit,null());
HXLINE( 203)			bgTrees->setGraphicSize(::Std_obj::_hx_int((( (Float)(widShit) ) * ((Float)1.4))),null());
HXLINE( 204)			fgTrees1->setGraphicSize(::Std_obj::_hx_int((( (Float)(widShit) ) * ((Float)0.8))),null());
HXLINE( 205)			treeLeaves->setGraphicSize(widShit,null());
HXLINE( 207)			fgTrees1->updateHitbox();
HXLINE( 208)			bgSky1->updateHitbox();
HXLINE( 209)			bgSchool1->updateHitbox();
HXLINE( 210)			bgStreet1->updateHitbox();
HXLINE( 211)			bgTrees->updateHitbox();
HXLINE( 212)			treeLeaves->updateHitbox();
HXLINE( 214)			this->bgGirls =  ::gameFolder::gameObjects::background::BackgroundGirls_obj::__alloc( HX_CTX ,( (Float)(-100) ),( (Float)(190) ));
HXLINE( 215)			this->bgGirls->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 217)			if ((( (::String)(::gameFolder::meta::state::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase() == HX_("roses",04,6c,64,ed))) {
HXLINE( 219)				this->bgGirls->getScared();
            			}
HXLINE( 222)			 ::gameFolder::gameObjects::background::BackgroundGirls _hx_tmp1 = this->bgGirls;
HXDLIN( 222)			Float _hx_tmp2 = this->bgGirls->get_width();
HXDLIN( 222)			_hx_tmp1->setGraphicSize(::Std_obj::_hx_int((_hx_tmp2 * this->daPixelZoom)),null());
HXLINE( 223)			this->bgGirls->updateHitbox();
HXLINE( 224)			this->add(this->bgGirls);
HXLINE( 160)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("spooky",eb,bd,9e,c1)) ){
HXLINE(  61)			curStage = HX_("spooky",eb,bd,9e,c1);
HXLINE(  64)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/halloween_bg",26,b1,80,69));
HXDLIN(  64)			::String library = null();
HXDLIN(  64)			::String hallowTex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  64)			 ::flixel::graphics::frames::FlxAtlasFrames hallowTex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(hallowTex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE(  66)			this->halloweenBG =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,-100,null());
HXLINE(  67)			this->halloweenBG->set_frames(hallowTex1);
HXLINE(  68)			this->halloweenBG->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("halloweem bg0",37,fc,3c,6c),null(),null(),null(),null());
HXLINE(  69)			this->halloweenBG->animation->addByPrefix(HX_("lightning",0a,39,4a,d7),HX_("halloweem bg lightning strike",af,54,50,5b),24,false,null(),null());
HXLINE(  70)			this->halloweenBG->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE(  71)			this->halloweenBG->set_antialiasing(true);
HXLINE(  72)			this->add(this->halloweenBG);
HXLINE(  60)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE( 254)			::gameFolder::meta::state::PlayState_obj::defaultCamZoom = ((Float)0.9);
HXLINE( 255)			curStage = HX_("stage",be,6a,0b,84);
HXLINE( 256)			 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-600,-200,null());
HXDLIN( 256)			::String library = null();
HXDLIN( 256)			 ::flixel::FlxSprite bg1 = bg->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/stageback",d6,7d,e7,53))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE( 257)			bg1->set_antialiasing(true);
HXLINE( 258)			bg1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 259)			bg1->set_active(false);
HXLINE( 262)			this->add(bg1);
HXLINE( 264)			 ::flixel::FlxSprite stageFront =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-650,600,null());
HXDLIN( 264)			::String library1 = null();
HXDLIN( 264)			 ::flixel::FlxSprite stageFront1 = stageFront->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/stagefront",1a,ae,86,6f))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null());
HXLINE( 265)			stageFront1->setGraphicSize(::Std_obj::_hx_int((stageFront1->get_width() * ((Float)1.1))),null());
HXLINE( 266)			stageFront1->updateHitbox();
HXLINE( 267)			stageFront1->set_antialiasing(true);
HXLINE( 268)			stageFront1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 269)			stageFront1->set_active(false);
HXLINE( 272)			this->add(stageFront1);
HXLINE( 274)			 ::flixel::FlxSprite stageCurtains =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-500,-300,null());
HXDLIN( 274)			::String library2 = null();
HXDLIN( 274)			 ::flixel::FlxSprite stageCurtains1 = stageCurtains->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/stagecurtains",50,3b,ed,08))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE( 275)			stageCurtains1->setGraphicSize(::Std_obj::_hx_int((stageCurtains1->get_width() * ((Float)0.9))),null());
HXLINE( 276)			stageCurtains1->updateHitbox();
HXLINE( 277)			stageCurtains1->set_antialiasing(true);
HXLINE( 278)			stageCurtains1->scrollFactor->set(((Float)1.3),((Float)1.3));
HXLINE( 279)			stageCurtains1->set_active(false);
HXLINE( 282)			this->add(stageCurtains1);
            		}
            		_hx_goto_0:;
            	}

Dynamic Stage_obj::__CreateEmpty() { return new Stage_obj; }

void *Stage_obj::_hx_vtable = 0;

Dynamic Stage_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Stage_obj > _hx_result = new Stage_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Stage_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x26b27adc) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x26b27adc;
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		return inClassId==(int)0x7ccf8994;
	}
}

::String Stage_obj::returnGFtype(::String curStage){
            	HX_STACKFRAME(&_hx_pos_fd8e2044f3578622_289_returnGFtype)
HXLINE( 290)		::String gfVersion = HX_("gf",1f,5a,00,00);
HXLINE( 292)		::String _hx_switch_0 = curStage;
            		if (  (_hx_switch_0==HX_("highway",0d,b3,8f,73)) ){
HXLINE( 295)			gfVersion = HX_("gf-car",a6,63,ab,07);
HXDLIN( 295)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("mall",d4,3a,56,48)) ||  (_hx_switch_0==HX_("mallEvil",88,d3,e3,a7)) ){
HXLINE( 297)			gfVersion = HX_("gf-christmas",94,26,b1,6d);
HXDLIN( 297)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 299)			gfVersion = HX_("gf-pixel",98,3e,8c,55);
HXDLIN( 299)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("schoolEvil",28,a1,f5,f7)) ){
HXLINE( 301)			gfVersion = HX_("gf-pixel",98,3e,8c,55);
HXDLIN( 301)			goto _hx_goto_3;
            		}
            		_hx_goto_3:;
HXLINE( 304)		return gfVersion;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Stage_obj,returnGFtype,return )

void Stage_obj::dadPosition(::String curStage, ::gameFolder::gameObjects::Character dad, ::gameFolder::gameObjects::Character gf, ::flixel::math::FlxPoint camPos,::String songPlayer2){
            	HX_STACKFRAME(&_hx_pos_fd8e2044f3578622_311_dadPosition)
HXDLIN( 311)		::String _hx_switch_0 = songPlayer2;
            		if (  (_hx_switch_0==HX_("dad",47,36,4c,00)) ){
HXLINE( 330)			 ::flixel::math::FlxPoint _g = camPos;
HXDLIN( 330)			_g->set_x((_g->x + 400));
HXDLIN( 330)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("gf",1f,5a,00,00)) ){
HXLINE( 314)			dad->setPosition(gf->x,gf->y);
HXLINE( 315)			gf->set_visible(false);
HXLINE( 313)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("monster",1a,54,b0,b8)) ){
HXLINE( 326)			 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 326)			_g->set_y((_g->y + 100));
HXDLIN( 326)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("monster-christmas",4f,88,85,27)) ){
HXLINE( 328)			 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 328)			_g->set_y((_g->y + 130));
HXDLIN( 328)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("parents-christmas",fe,94,c5,32)) ){
HXLINE( 335)			 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 335)			_g->set_x((_g->x - ( (Float)(500) )));
HXDLIN( 335)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("pico",e5,e8,57,4a)) ){
HXLINE( 332)			{
HXLINE( 332)				 ::flixel::math::FlxPoint _g = camPos;
HXDLIN( 332)				_g->set_x((_g->x + 600));
            			}
HXLINE( 333)			{
HXLINE( 333)				 ::gameFolder::gameObjects::Character _g1 = dad;
HXDLIN( 333)				_g1->set_y((_g1->y + 300));
            			}
HXLINE( 331)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("senpai",3c,df,8d,6b)) ){
HXLINE( 337)			{
HXLINE( 337)				 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 337)				_g->set_x((_g->x + 150));
            			}
HXLINE( 338)			{
HXLINE( 338)				 ::gameFolder::gameObjects::Character _g1 = dad;
HXDLIN( 338)				_g1->set_y((_g1->y + 360));
            			}
HXLINE( 339)			Float _hx_tmp = (dad->getGraphicMidpoint(null())->x + 300);
HXDLIN( 339)			camPos->set(_hx_tmp,dad->getGraphicMidpoint(null())->y);
HXLINE( 336)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("senpai-angry",10,7a,b8,25)) ){
HXLINE( 341)			{
HXLINE( 341)				 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 341)				_g->set_x((_g->x + 150));
            			}
HXLINE( 342)			{
HXLINE( 342)				 ::gameFolder::gameObjects::Character _g1 = dad;
HXDLIN( 342)				_g1->set_y((_g1->y + 360));
            			}
HXLINE( 343)			Float _hx_tmp = (dad->getGraphicMidpoint(null())->x + 300);
HXDLIN( 343)			camPos->set(_hx_tmp,dad->getGraphicMidpoint(null())->y);
HXLINE( 340)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("skater",b8,a0,60,d7)) ){
HXLINE( 352)			{
HXLINE( 352)				 ::flixel::math::FlxPoint _g = camPos;
HXDLIN( 352)				_g->set_x((_g->x + 400));
            			}
HXLINE( 353)			{
HXLINE( 353)				 ::gameFolder::gameObjects::Character _g1 = dad;
HXDLIN( 353)				_g1->set_y((_g1->y + 143));
            			}
HXLINE( 351)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("spirit",31,bb,a9,bd)) ){
HXLINE( 345)			{
HXLINE( 345)				 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 345)				_g->set_x((_g->x - ( (Float)(150) )));
            			}
HXLINE( 346)			{
HXLINE( 346)				 ::gameFolder::gameObjects::Character _g1 = dad;
HXDLIN( 346)				_g1->set_y((_g1->y + 100));
            			}
HXLINE( 347)			Float _hx_tmp = (dad->getGraphicMidpoint(null())->x + 300);
HXDLIN( 347)			camPos->set(_hx_tmp,dad->getGraphicMidpoint(null())->y);
HXLINE( 344)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("spooky",eb,bd,9e,c1)) ){
HXLINE( 324)			 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 324)			_g->set_y((_g->y + 200));
HXDLIN( 324)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("tankman",f0,7d,78,3d)) ){
HXLINE( 349)			{
HXLINE( 349)				 ::gameFolder::gameObjects::Character _g = dad;
HXDLIN( 349)				_g->set_x((_g->x + 50));
            			}
HXLINE( 350)			{
HXLINE( 350)				 ::gameFolder::gameObjects::Character _g1 = dad;
HXDLIN( 350)				_g1->set_y((_g1->y + 200));
            			}
HXLINE( 348)			goto _hx_goto_5;
            		}
            		_hx_goto_5:;
            	}


HX_DEFINE_DYNAMIC_FUNC5(Stage_obj,dadPosition,(void))

void Stage_obj::repositionPlayers(::String curStage, ::gameFolder::gameObjects::Character boyfriend, ::gameFolder::gameObjects::Character dad, ::gameFolder::gameObjects::Character gf){
            	HX_STACKFRAME(&_hx_pos_fd8e2044f3578622_360_repositionPlayers)
HXDLIN( 360)		::String _hx_switch_0 = curStage;
            		if (  (_hx_switch_0==HX_("highway",0d,b3,8f,73)) ){
HXLINE( 363)			{
HXLINE( 363)				 ::gameFolder::gameObjects::Character _g = boyfriend;
HXDLIN( 363)				_g->set_y((_g->y - ( (Float)(220) )));
            			}
HXLINE( 364)			{
HXLINE( 364)				 ::gameFolder::gameObjects::Character _g1 = boyfriend;
HXDLIN( 364)				_g1->set_x((_g1->x + 260));
            			}
HXLINE( 362)			goto _hx_goto_7;
            		}
            		if (  (_hx_switch_0==HX_("mall",d4,3a,56,48)) ){
HXLINE( 370)			 ::gameFolder::gameObjects::Character _g = boyfriend;
HXDLIN( 370)			_g->set_x((_g->x + 200));
HXDLIN( 370)			goto _hx_goto_7;
            		}
            		if (  (_hx_switch_0==HX_("mallEvil",88,d3,e3,a7)) ){
HXLINE( 373)			{
HXLINE( 373)				 ::gameFolder::gameObjects::Character _g = boyfriend;
HXDLIN( 373)				_g->set_x((_g->x + 320));
            			}
HXLINE( 374)			{
HXLINE( 374)				 ::gameFolder::gameObjects::Character _g1 = dad;
HXDLIN( 374)				_g1->set_y((_g1->y - ( (Float)(80) )));
            			}
HXLINE( 372)			goto _hx_goto_7;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 376)			{
HXLINE( 376)				 ::gameFolder::gameObjects::Character _g = boyfriend;
HXDLIN( 376)				_g->set_x((_g->x + 200));
            			}
HXLINE( 377)			{
HXLINE( 377)				 ::gameFolder::gameObjects::Character _g1 = boyfriend;
HXDLIN( 377)				_g1->set_y((_g1->y + 220));
            			}
HXLINE( 378)			{
HXLINE( 378)				 ::gameFolder::gameObjects::Character _g2 = gf;
HXDLIN( 378)				_g2->set_x((_g2->x + 180));
            			}
HXLINE( 379)			{
HXLINE( 379)				 ::gameFolder::gameObjects::Character _g3 = gf;
HXDLIN( 379)				_g3->set_y((_g3->y + 300));
            			}
HXLINE( 375)			goto _hx_goto_7;
            		}
            		if (  (_hx_switch_0==HX_("schoolEvil",28,a1,f5,f7)) ){
HXLINE( 389)			{
HXLINE( 389)				 ::gameFolder::gameObjects::Character _g = boyfriend;
HXDLIN( 389)				_g->set_x((_g->x + 200));
            			}
HXLINE( 390)			{
HXLINE( 390)				 ::gameFolder::gameObjects::Character _g1 = boyfriend;
HXDLIN( 390)				_g1->set_y((_g1->y + 220));
            			}
HXLINE( 391)			{
HXLINE( 391)				 ::gameFolder::gameObjects::Character _g2 = gf;
HXDLIN( 391)				_g2->set_x((_g2->x + 180));
            			}
HXLINE( 392)			{
HXLINE( 392)				 ::gameFolder::gameObjects::Character _g3 = gf;
HXDLIN( 392)				_g3->set_y((_g3->y + 300));
            			}
HXLINE( 380)			goto _hx_goto_7;
            		}
            		_hx_goto_7:;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Stage_obj,repositionPlayers,(void))

void Stage_obj::stageUpdate(){
            	HX_STACKFRAME(&_hx_pos_fd8e2044f3578622_398_stageUpdate)
HXDLIN( 398)		::String _hx_switch_0 = this->curStage;
            		if (  (_hx_switch_0==HX_("highway",0d,b3,8f,73)) ){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::gameFolder::gameObjects::background::BackgroundDancer dancer){
            				HX_STACKFRAME(&_hx_pos_fd8e2044f3578622_403_stageUpdate)
HXLINE( 403)				dancer->dance();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 401)			this->grpLimoDancers->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXDLIN( 401)			goto _hx_goto_9;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 406)			this->bgGirls->dance();
HXDLIN( 406)			goto _hx_goto_9;
            		}
            		_hx_goto_9:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,stageUpdate,(void))


::hx::ObjectPtr< Stage_obj > Stage_obj::__new(::String curStage) {
	::hx::ObjectPtr< Stage_obj > __this = new Stage_obj();
	__this->__construct(curStage);
	return __this;
}

::hx::ObjectPtr< Stage_obj > Stage_obj::__alloc(::hx::Ctx *_hx_ctx,::String curStage) {
	Stage_obj *__this = (Stage_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Stage_obj), true, "gameFolder.gameObjects.Stage"));
	*(void **)__this = Stage_obj::_hx_vtable;
	__this->__construct(curStage);
	return __this;
}

Stage_obj::Stage_obj()
{
}

void Stage_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Stage);
	HX_MARK_MEMBER_NAME(halloweenBG,"halloweenBG");
	HX_MARK_MEMBER_NAME(phillyCityLights,"phillyCityLights");
	HX_MARK_MEMBER_NAME(phillyTrain,"phillyTrain");
	HX_MARK_MEMBER_NAME(trainSound,"trainSound");
	HX_MARK_MEMBER_NAME(limo,"limo");
	HX_MARK_MEMBER_NAME(grpLimoDancers,"grpLimoDancers");
	HX_MARK_MEMBER_NAME(fastCar,"fastCar");
	HX_MARK_MEMBER_NAME(upperBoppers,"upperBoppers");
	HX_MARK_MEMBER_NAME(bottomBoppers,"bottomBoppers");
	HX_MARK_MEMBER_NAME(santa,"santa");
	HX_MARK_MEMBER_NAME(bgGirls,"bgGirls");
	HX_MARK_MEMBER_NAME(defaultCamZoom,"defaultCamZoom");
	HX_MARK_MEMBER_NAME(curStage,"curStage");
	HX_MARK_MEMBER_NAME(daPixelZoom,"daPixelZoom");
	 ::flixel::group::FlxTypedGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Stage_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(halloweenBG,"halloweenBG");
	HX_VISIT_MEMBER_NAME(phillyCityLights,"phillyCityLights");
	HX_VISIT_MEMBER_NAME(phillyTrain,"phillyTrain");
	HX_VISIT_MEMBER_NAME(trainSound,"trainSound");
	HX_VISIT_MEMBER_NAME(limo,"limo");
	HX_VISIT_MEMBER_NAME(grpLimoDancers,"grpLimoDancers");
	HX_VISIT_MEMBER_NAME(fastCar,"fastCar");
	HX_VISIT_MEMBER_NAME(upperBoppers,"upperBoppers");
	HX_VISIT_MEMBER_NAME(bottomBoppers,"bottomBoppers");
	HX_VISIT_MEMBER_NAME(santa,"santa");
	HX_VISIT_MEMBER_NAME(bgGirls,"bgGirls");
	HX_VISIT_MEMBER_NAME(defaultCamZoom,"defaultCamZoom");
	HX_VISIT_MEMBER_NAME(curStage,"curStage");
	HX_VISIT_MEMBER_NAME(daPixelZoom,"daPixelZoom");
	 ::flixel::group::FlxTypedGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Stage_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"limo") ) { return ::hx::Val( limo ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"santa") ) { return ::hx::Val( santa ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fastCar") ) { return ::hx::Val( fastCar ); }
		if (HX_FIELD_EQ(inName,"bgGirls") ) { return ::hx::Val( bgGirls ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"curStage") ) { return ::hx::Val( curStage ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"trainSound") ) { return ::hx::Val( trainSound ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"halloweenBG") ) { return ::hx::Val( halloweenBG ); }
		if (HX_FIELD_EQ(inName,"phillyTrain") ) { return ::hx::Val( phillyTrain ); }
		if (HX_FIELD_EQ(inName,"daPixelZoom") ) { return ::hx::Val( daPixelZoom ); }
		if (HX_FIELD_EQ(inName,"dadPosition") ) { return ::hx::Val( dadPosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"stageUpdate") ) { return ::hx::Val( stageUpdate_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"upperBoppers") ) { return ::hx::Val( upperBoppers ); }
		if (HX_FIELD_EQ(inName,"returnGFtype") ) { return ::hx::Val( returnGFtype_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"bottomBoppers") ) { return ::hx::Val( bottomBoppers ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"grpLimoDancers") ) { return ::hx::Val( grpLimoDancers ); }
		if (HX_FIELD_EQ(inName,"defaultCamZoom") ) { return ::hx::Val( defaultCamZoom ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"phillyCityLights") ) { return ::hx::Val( phillyCityLights ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"repositionPlayers") ) { return ::hx::Val( repositionPlayers_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Stage_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"limo") ) { limo=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"santa") ) { santa=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fastCar") ) { fastCar=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bgGirls") ) { bgGirls=inValue.Cast<  ::gameFolder::gameObjects::background::BackgroundGirls >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"curStage") ) { curStage=inValue.Cast< ::String >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"trainSound") ) { trainSound=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"halloweenBG") ) { halloweenBG=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"phillyTrain") ) { phillyTrain=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"daPixelZoom") ) { daPixelZoom=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"upperBoppers") ) { upperBoppers=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"bottomBoppers") ) { bottomBoppers=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"grpLimoDancers") ) { grpLimoDancers=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"defaultCamZoom") ) { defaultCamZoom=inValue.Cast< Float >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"phillyCityLights") ) { phillyCityLights=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Stage_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("halloweenBG",92,b2,88,5c));
	outFields->push(HX_("phillyCityLights",30,e0,12,1f));
	outFields->push(HX_("phillyTrain",80,9b,65,bb));
	outFields->push(HX_("trainSound",e7,b3,e5,da));
	outFields->push(HX_("limo",1f,17,b3,47));
	outFields->push(HX_("grpLimoDancers",70,18,93,51));
	outFields->push(HX_("fastCar",d8,f2,1f,de));
	outFields->push(HX_("upperBoppers",37,47,71,21));
	outFields->push(HX_("bottomBoppers",ce,2c,ba,6e));
	outFields->push(HX_("santa",8d,45,86,77));
	outFields->push(HX_("bgGirls",92,16,2b,41));
	outFields->push(HX_("defaultCamZoom",01,50,2a,0b));
	outFields->push(HX_("curStage",1e,65,b9,cb));
	outFields->push(HX_("daPixelZoom",7c,81,6e,df));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Stage_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Stage_obj,halloweenBG),HX_("halloweenBG",92,b2,88,5c)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(Stage_obj,phillyCityLights),HX_("phillyCityLights",30,e0,12,1f)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Stage_obj,phillyTrain),HX_("phillyTrain",80,9b,65,bb)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(Stage_obj,trainSound),HX_("trainSound",e7,b3,e5,da)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Stage_obj,limo),HX_("limo",1f,17,b3,47)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(Stage_obj,grpLimoDancers),HX_("grpLimoDancers",70,18,93,51)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Stage_obj,fastCar),HX_("fastCar",d8,f2,1f,de)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Stage_obj,upperBoppers),HX_("upperBoppers",37,47,71,21)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Stage_obj,bottomBoppers),HX_("bottomBoppers",ce,2c,ba,6e)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Stage_obj,santa),HX_("santa",8d,45,86,77)},
	{::hx::fsObject /*  ::gameFolder::gameObjects::background::BackgroundGirls */ ,(int)offsetof(Stage_obj,bgGirls),HX_("bgGirls",92,16,2b,41)},
	{::hx::fsFloat,(int)offsetof(Stage_obj,defaultCamZoom),HX_("defaultCamZoom",01,50,2a,0b)},
	{::hx::fsString,(int)offsetof(Stage_obj,curStage),HX_("curStage",1e,65,b9,cb)},
	{::hx::fsFloat,(int)offsetof(Stage_obj,daPixelZoom),HX_("daPixelZoom",7c,81,6e,df)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Stage_obj_sStaticStorageInfo = 0;
#endif

static ::String Stage_obj_sMemberFields[] = {
	HX_("halloweenBG",92,b2,88,5c),
	HX_("phillyCityLights",30,e0,12,1f),
	HX_("phillyTrain",80,9b,65,bb),
	HX_("trainSound",e7,b3,e5,da),
	HX_("limo",1f,17,b3,47),
	HX_("grpLimoDancers",70,18,93,51),
	HX_("fastCar",d8,f2,1f,de),
	HX_("upperBoppers",37,47,71,21),
	HX_("bottomBoppers",ce,2c,ba,6e),
	HX_("santa",8d,45,86,77),
	HX_("bgGirls",92,16,2b,41),
	HX_("defaultCamZoom",01,50,2a,0b),
	HX_("curStage",1e,65,b9,cb),
	HX_("daPixelZoom",7c,81,6e,df),
	HX_("returnGFtype",09,75,2e,fe),
	HX_("dadPosition",10,b2,12,3e),
	HX_("repositionPlayers",f6,a5,e0,6f),
	HX_("stageUpdate",67,07,ff,19),
	::String(null()) };

::hx::Class Stage_obj::__mClass;

void Stage_obj::__register()
{
	Stage_obj _hx_dummy;
	Stage_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("gameFolder.gameObjects.Stage",84,dc,5d,28);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Stage_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Stage_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Stage_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Stage_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gameFolder
} // end namespace gameObjects
